---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: default-http-backend
  name: default-http-backend
  namespace: kube-system
spec:
  ports:
    -
      name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    k8s-app: default-http-backend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: default-http-backend
      name: default-http-backend
      namespace: kube-system
    spec:
      containers:
        -
          image: "gcr.io/google_containers/defaultbackend:1.0"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          name: default-http-backend
          ports:
            -
              containerPort: 8080
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-lb
  namespace: kube-system
spec:
  ports:
    -
      nodePort: 30080
      port: 80
      targetPort: 80
      name: http
    -
      nodePort: 30443
      port: 443
      targetPort: 443
      name: https
  selector:
    k8s-app: nginx-ingress-lb
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
data:
  proxy-connect-timeout: "{{ nginx_proxy_connect_timeout }}"
  proxy-read-timeout: "{{ nginx_proxy_read_timeout }}"
  proxy-send-timeout: "{{ nginx_proxy_send_timeout }}"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: nginx-ingress-lb
  name: nginx-ingress-controller
  namespace: kube-system
spec:
  replicas: 2
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-lb
      name: nginx-ingress-lb
      namespace: kube-system
    spec:
      containers:
        -
          args:
            - /nginx-ingress-controller
            - "--default-backend-service=$(POD_NAMESPACE)/default-http-backend"
            - "--nginx-configmap=$(POD_NAMESPACE)/nginx-ingress-controller"
          env:
            -
              name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            -
              name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: "gcr.io/google_containers/nginx-ingress-controller:0.8.3"
          imagePullPolicy: Always
          name: nginx-ingress-lb
          ports:
            -
              containerPort: 80
            -
              containerPort: 443
            -
              containerPort: 18080
          readinessProbe:
            httpGet:
              scheme: HTTP
              port: 18080
              path: /healthz
          livenessProbe:
            httpGet:
              scheme: HTTP
              port: 18080
              path: /healthz
            initialDelaySeconds: 10
            timeoutSeconds: 1
      terminationGracePeriodSeconds: 60
